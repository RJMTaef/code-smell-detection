{
    "method_name": "contains",
    "refactored_code": "import .util.HashMap;\nimport .util.Map;\n\nclass ShoppingCart {\n    private Map<String, Integer> items;\n\n    public ShoppingCart() {\n        this.items = new HashMap<>();\n    }\n\n    public void addItem(String itemName, int quantity) {\n        items.put(itemName, items.getOrDefault(itemName, 0) + quantity);\n    }\n\n    public int getItemQuantity(String itemName) {\n        return items.getOrDefault(itemName, 0);\n    }\n\n    public Map<String, Integer> getItems() {\n        return new HashMap<>(items); //Return a copy to prevent modification from outside\n    }\n\n    public void removeItem(String itemName) {\n        items.remove(itemName);\n    }\n\n    public int getTotalItems() {\n        return items.values().stream().mapToInt(Integer::intValue).sum();\n    }\n\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        ShoppingCart cart = new ShoppingCart();\n        cart.addItem(\"Apple\", 5);\n        cart.addItem(\"Banana\", 3);\n        cart.addItem(\"Apple\", 2); //Add more apples\n\n        System.out.println(\"Total Apples: \" + cart.getItemQuantity(\"Apple\"));\n        System.out.println(\"Total Bananas: \" + cart.getItemQuantity(\"Banana\"));\n        System.out.println(\"Total Items: \" + cart.getTotalItems());\n\n\n        cart.removeItem(\"Banana\");\n        System.out.println(\"Total Items after removing Bananas: \" + cart.getTotalItems());\n\n    }\n}\n\n",
    "generated_at": "20241129_210956"
}